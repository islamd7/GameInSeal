include raylib as rl
include config: WIDTH, HEIGHT, TITLE, FPS, ITEM_COUNT
include player: Player
include items: Falling_items
include randrange: rand_range
include io

STATE_STARTING  = 0
STATE_PLAYING   = 1
STATE_GAME_OVER = 2
STATE_PAUSE     = 3


SCORE = 0
BEST_SCORE = 0
file = io.File("best_score.txt", "w")
file..write(str(BEST_SCORE))
file..close()

game_state = STATE_STARTING
 
rl.init_window(WIDTH, HEIGHT, TITLE)
rl.set_fps(FPS)

font = rl.load_font("joystix/joystix monospace.otf", 256)

player        = Player(360, 500)
falling_items = []
pool          = []

define check_collision(rec1, rec2)
    if (rec1.body.x < rec2.body.x + rec2.body.w and
        rec1.body.x + rec1.body.w > rec2.body.x and
        rec1.body.y < rec2.body.y + rec2.body.h and
        rec1.body.y + rec1.body.h > rec2.body.y
    )
        return true
    else
        return false

define reset_game(player, falling_items, SCORE, spawn_timer)
    player.x = 360
    for falling_item in falling_items
        falling_item.active = true
        falling_item.body.x = rand_range(20, WIDTH - 20)
        falling_item.body.y = 0
        falling_item.return_timer = 0
        spawn_timer = 0


for i in ITEM_COUNT
    push(pool, Falling_items(900, 650))

running     = true
spawn_timer = 0
spawn_index = 0
while running and not rl.window_should_close()
    dt = rl.delta_time()
    
    if game_state == STATE_STARTING
        rl.begin_drawing()
        rl.clear_background(rl.colors.WHITE)
        rl.draw_text(font, "Press SPACE to Start", rl.Vector2(130, 250), 40, 0, rl.colors.DARKGRAY)
        rl.draw_text(font, "Use LEFT and RIGHT arrows to move", rl.Vector2(170, 310), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "Press P to Pause", rl.Vector2(280, 360), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "Press R to Restart", rl.Vector2(280, 400), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "Press ESC to Exit", rl.Vector2(280, 440), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "", rl.Vector2(320, 350), 20, 0, rl.colors.DARKBLUE)
        rl.end_drawing()

        if rl.is_key_pressed(rl.keys.KEY_SPACE)
            game_state = STATE_PLAYING

    else if game_state == STATE_PLAYING
        if spawn_index < ITEM_COUNT
            spawn_timer += 1
            if spawn_timer >= 100
                item = pool[spawn_index]
                item.body.x = rand_range(20, WIDTH - 20)
                item.body.y = 0
                item.active = true
                push(falling_items, item)
                spawn_index += 1
                spawn_timer = 0


        rl.begin_drawing()
        rl.clear_background(rl.colors.WHITE)

        player..draw()
        for falling_item in falling_items
            if falling_item.active == true
                falling_item..draw()
                falling_item..move()
                if check_collision(falling_item, player)
                    print("Collision has been detected.")
                    SCORE += 1
                    falling_item.body.x = rand_range(20, WIDTH - 20)
                    falling_item.body.y = rand_range(-200, -100)
                    skip
                    
                if falling_item.body.y > HEIGHT
                    falling_item.body.x = rand_range(20, WIDTH - 20)
                    falling_item.body.y = rand_range(-200, -100)
                    SCORE -= 1

        rl.draw_text(font, "SCORE: " + str(SCORE), rl.Vector2(10, 10), 20, 0, rl.colors.BLACK)
        rl.end_drawing()

        player..move()

        if SCORE >= BEST_SCORE
            BEST_SCORE = SCORE

        if SCORE < 0
            game_state = STATE_GAME_OVER

        if rl.is_key_pressed(rl.keys.KEY_P)
            game_state = STATE_PAUSE
    else if game_state == STATE_PAUSE
        rl.begin_drawing()
        rl.clear_background(rl.colors.WHITE)
        rl.end_drawing()
        rl.draw_text(font, "PAUSED", rl.Vector2(290, 250), 40, 0, rl.colors.DARKGRAY)
        rl.draw_text(font, "Press P to Resume", rl.Vector2(280, 310), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "SCORE: " + str(SCORE), rl.Vector2(320, 350), 20, 0, rl.colors.DARKBLUE)
        rl.draw_text(font, "BEST SCORE: " + str(BEST_SCORE), rl.Vector2(280, 390), 20, 0, rl.colors.DARKBLUE)

        if rl.is_key_pressed(rl.keys.KEY_P)
            game_state = STATE_PLAYING

    
    else if game_state == STATE_GAME_OVER
        rl.begin_drawing()
        rl.clear_background(rl.colors.WHITE)
        rl.end_drawing()
        rl.draw_text(font, "GAME OVER",rl.Vector2(275, 250), 40, 0, rl.colors.RED)
        rl.draw_text(font, "Press R to Restart", rl.Vector2(280, 310), 20, 0, rl.colors.GRAY)
        rl.draw_text(font, "BEST SCORE: " + str(BEST_SCORE), rl.Vector2(310, 350), 20, 0, rl.colors.DARKBLUE)

        if rl.is_key_pressed(rl.keys.KEY_R)
            reset_game(player, item, SCORE, spawn_timer)
            game_state = STATE_PLAYING
            spawn_index = 0
            spawn_timer = 0
            SCORE = 0
            while len(pool) > 0
                pop(pool)
            for i in ITEM_COUNT
                push(pool, Falling_items(900, 650))
            falling_items = []


rl.close_window()