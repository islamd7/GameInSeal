include raylib as rl
include config: WIDTH, HEIGHT, TITLE, FPS, ITEM_COUNT
include player: Player
include items: Falling_items
include randrange: rand_range

STATE_PLAYING   = 0
STATE_GAME_OVER = 1


SCORE = 0
game_state = STATE_PLAYING
 
rl.init_window(WIDTH, HEIGHT, TITLE)
rl.set_fps(FPS)

player        = Player(360, 500)
falling_items = []
pool          = []

define check_collision(rec1, rec2)
    if rec1.body.x < rec2.body.x + rec2.body.w and rec1.body.x + rec1.body.w > rec2.body.x and rec1.body.y < rec2.body.y + rec2.body.h and rec1.body.y + rec1.body.h > rec2.body.y
        return true
    else
        return false

define reset_game(player, item, SCORE, game_state)
    player.x = 360
    SCORE = 0
    game_state = STATE_PLAYING


for i in ITEM_COUNT
    push(pool, Falling_items(900, 650))

running     = true
spawn_timer = 0
spawn_index = 0
while running and not rl.window_should_close()
    dt = rl.delta_time()

    if game_state == 0
        if spawn_index < ITEM_COUNT
            spawn_timer += 1
            if spawn_timer >= 100
                item = pool[spawn_index]
                item.body.x = rand_range(20, WIDTH - 20)
                item.body.y = 0
                item.active = true
                push(falling_items, item)
                spawn_index += 1
                spawn_timer = 0


        rl.begin_drawing()
        rl.clear_background(rl.colors.WHITE)

        player..draw()
        for falling_item in falling_items
            if falling_item.active = true
                falling_item..draw()
                falling_item..move()
                if check_collision(falling_item, player)
                    print("Collision has been detected.")
                    SCORE += 1
                    falling_item.body.x = rand_range(20, WIDTH - 20)
                    falling_item.body.y = 0
                    skip
                    
                if falling_item.body.y > HEIGHT
                    falling_item.return_timer += 1
                    if falling_item.return_timer == 100
                        falling_item.body.x = rand_range(20, WIDTH - 20)
                        falling_item.body.y = 0
                        falling_item.return_timer = 0
                        SCORE -= 1
                    
        rl.draw_text("SCORE", 10, 10, 20, 0, rl.colors.BLACK)
        rl.end_drawing()

        player..move()


        if SCORE < 0
            print("Game over")
            game_state = STATE_GAME_OVER
        print(SCORE)


    else if game_state == 1
        rl.draw_text("GAME OVER", 300, 250, 40, 0, rl.colors.RED)
        rl.draw_text("Press R to Restart", 280, 310, 20, 0, rl.colors.GRAY)
        rl.draw_text("SCORE", 320, 350, 20, 0, rl.colors.DARKBLUE)

        if rl.is_key_pressed(rl.KEY_R)
            reset_game(player, item, SCORE, game_state)
            falling_items.clear()
            spawn_index = 0
            spawn_timer = 0


rl.close_window()